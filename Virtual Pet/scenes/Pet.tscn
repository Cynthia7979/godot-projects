[gd_scene load_steps=11 format=2]

[ext_resource path="res://assets/body.png" type="Texture" id=1]
[ext_resource path="res://scenes/Eye.tscn" type="PackedScene" id=2]
[ext_resource path="res://scenes/Pet.gd" type="Script" id=3]

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

uniform float width = 64;
uniform float height = 64;
uniform vec2 mouse_position = vec2(0, 0);

void fragment() {
	vec2 uv = UV;

	// map skew to [-0.5, 0.5]
	float skew_x = mouse_position.x / width;
	float skew_y = mouse_position.y / height;
	
	// map to [-0.5, 0.5]
	uv.x = (uv.x - 0.5);
	uv.y = (uv.y - 0.5);
	
	// ratio - how far are currnet point from mouse position
	float sx = 1.0 - (uv.x * skew_x);
	float sy = 1.0 - (uv.y * skew_y);
	
	// calculate z (depth) depending on ratio
	float z = 1.0 + (sx * sy) / 2.0;
	// correct perspective for given point
	uv.x = uv.x / z;
	uv.y = uv.y / z;
	
	// scale a bit down a reset mapping from [-0.5, 0.5] to [0, 1]
	uv.x = uv.x / 0.45 + 0.5;
	uv.y = uv.y / 0.45 + 0.5;
	COLOR = texture(TEXTURE, uv);
	
	// if uv outside texture - then use transparent color
	if (uv.x < 0.0 || uv.x > 1.0) {
		COLOR.a = 0.0;
	} else if (uv.y < 0.0 || uv.y > 1.0) {
		COLOR.a = 0.0;
	} else {
		// brightness
		float brightness = 1.0 - mouse_position.y / (height / 2.0) * 0.2;
		COLOR.rgb = texture(TEXTURE, uv, 1.0).rgb * brightness;
		
		COLOR.a = texture(TEXTURE, uv, 1.0).a;
	}
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/width = 64.0
shader_param/height = 64.0
shader_param/mouse_position = Vector2( 0, 0 )

[sub_resource type="RectangleShape2D" id=1]
extents = Vector2( 248, 247 )

[sub_resource type="Animation" id=5]
length = 0.001
tracks/0/type = "bezier"
tracks/0/path = NodePath("Eyes:position:x")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0 )
}
tracks/1/type = "bezier"
tracks/1/path = NodePath("Eyes:position:y")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0 )
}
tracks/2/type = "value"
tracks/2/path = NodePath("Eyes:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}

[sub_resource type="Animation" id=6]
resource_name = "eye_return"
tracks/0/type = "value"
tracks/0/path = NodePath("Eyes:position")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3, 0.7, 1 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 4.63557, 4.63557 ), Vector2( 10, 10 ), Vector2( 0, 0 ) ]
}

[sub_resource type="Animation" id=8]
resource_name = "get_pet"
length = 4.0
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("Eyes:position")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1.5, 2.8, 3.4, 4 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 0, 25 ), Vector2( 0, 0 ), Vector2( 0, -15 ), Vector2( 0, 0 ) ]
}

[sub_resource type="Animation" id=7]
resource_name = "getting_pet_manual"
tracks/0/type = "value"
tracks/0/path = NodePath("BodySprite:scale")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6, 0.8, 1 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1, 1.643 ), Vector2( 1, 0.503 ), Vector2( 1, 1.298 ), Vector2( 1, 0.787 ), Vector2( 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("CollisionShape2D:scale")
tracks/1/interp = 2
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6, 0.8, 1 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1, 1.643 ), Vector2( 1, 0.503 ), Vector2( 1, 1.298 ), Vector2( 1, 0.787 ), Vector2( 1, 1 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("BodySprite:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6, 0.8, 1, 1.001 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 0, -100 ), Vector2( 0, 100 ), Vector2( 0, -80 ), Vector2( 0, 50 ), Vector2( 0, 0 ), Vector2( 0, 0 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("CollisionShape2D:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6, 0.8, 1, 1.001 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 0, -2 ), Vector2( 0, -100 ), Vector2( 0, 100 ), Vector2( 0, -80 ), Vector2( 0, 50 ), Vector2( 0, -2 ), Vector2( 0, -2 ) ]
}

[node name="Pet" type="Area2D"]
material = SubResource( 4 )
scale = Vector2( 0.5, 0.5 )
script = ExtResource( 3 )

[node name="BodySprite" type="Sprite" parent="."]
texture = ExtResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( 0, -2 )
shape = SubResource( 1 )

[node name="Eyes" type="Node2D" parent="."]

[node name="LeftEye" parent="Eyes" instance=ExtResource( 2 )]
position = Vector2( -88, -30 )

[node name="RightEye" parent="Eyes" instance=ExtResource( 2 )]
position = Vector2( 91, -33 )
rotation = 3.14159

[node name="BlinkTimer" type="Timer" parent="."]
wait_time = 4.0
one_shot = true

[node name="StopGettingPetTimer" type="Timer" parent="."]
wait_time = 0.8
one_shot = true

[node name="GetPetTimer" type="Timer" parent="."]
wait_time = 0.7
one_shot = true

[node name="EyeAnimationPlayer" type="AnimationPlayer" parent="."]
anims/RESET = SubResource( 5 )
anims/eye_return = SubResource( 6 )
anims/get_pet = SubResource( 8 )

[node name="BodyAnimationPlayer" type="AnimationPlayer" parent="."]
anims/getting_pet_manual = SubResource( 7 )

[connection signal="mouse_entered" from="." to="." method="_on_Pet_mouse_entered"]
[connection signal="mouse_exited" from="." to="." method="_on_Pet_mouse_exited"]
[connection signal="timeout" from="BlinkTimer" to="." method="_on_BlinkTimer_timeout"]
[connection signal="timeout" from="StopGettingPetTimer" to="." method="stop_getting_pet"]
[connection signal="timeout" from="GetPetTimer" to="." method="_on_GetPetTimer_timeout"]
